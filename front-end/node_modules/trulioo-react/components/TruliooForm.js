"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TruliooForm = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _reactRedux = require("react-redux");

var _reactJsonschemaForm = _interopRequireDefault(require("react-jsonschema-form"));

var _countryList = require("country-list");

var _core = require("@emotion/core");

var _actions = require("../actions");

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n      padding: 2rem;\n    "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var TruliooForm =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(TruliooForm, _React$Component);

  function TruliooForm() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, TruliooForm);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TruliooForm)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "handleChange", function (e) {
      var shouldUpdateFormData = _this.props.fields.formData === undefined || e.formData.countries !== _this.props.fields.formData.countries;

      if (shouldUpdateFormData) {
        _this.props.getFields(e.formData.countries, _this.props.customFields);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "handleSubmit", function (e) {
      _this.props.handleSubmit && _this.props.handleSubmit(e);

      _this.props.submitForm(e.formData).then(function (res) {
        _this.props.handleResponse(res);
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "triggerSubmitResponse", function (e) {
      _this.props.handleResponse(e);
    });
    return _this;
  }

  (0, _createClass2.default)(TruliooForm, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.props.getCountries(this.props.url);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var style = (0, _core.css)(_templateObject());
      return (0, _core.jsx)("div", {
        css: style
      }, (0, _core.jsx)(_reactJsonschemaForm.default, {
        schema: this.props.schema,
        onChange: function onChange(e) {
          return _this2.handleChange(e);
        },
        onSubmit: function onSubmit(e) {
          return _this2.handleSubmit(e);
        },
        formData: this.props.fields.formData
      }));
    }
  }]);
  return TruliooForm;
}(_react.default.Component);

exports.TruliooForm = TruliooForm;

var mapStateToProps = function mapStateToProps(state) {
  var schema = {
    type: 'object',
    properties: {
      countries: {
        title: 'Countries',
        type: 'string',
        enum: state.getCountries.countries,
        enumNames: state.getCountries.countries && state.getCountries.countries.map(function (country) {
          return (0, _countryList.getName)(country);
        })
      }
    }
  };

  if (state.fields && state.fields.fields && state.fields.fields.properties) {
    schema.properties.TruliooFields = {
      title: 'Properties',
      type: 'object',
      properties: state.fields && state.fields.fields && state.fields.fields.properties
    };

    if (state.fields.customFields) {
      schema.properties = (0, _objectSpread2.default)({}, schema.properties, state.fields.customFields);
    }

    if (state.fields.consents) {
      schema.properties.Consents = state.fields.consents;
    }
  }

  return {
    fields: state.fields,
    schema: schema,
    formdata: state.formData
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps, {
  getCountries: _actions.getCountries,
  getFields: _actions.getFields,
  submitForm: _actions.submitForm
})(TruliooForm);

exports.default = _default;