"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _axios = _interopRequireDefault(require("axios"));

var _EmbedID = _interopRequireDefault(require("../EmbedID"));

var _mockApi = _interopRequireDefault(require("./mockApi"));

jest.mock('axios');
(0, _mockApi.default)();
it('renders countries as a select element',
/*#__PURE__*/
(0, _asyncToGenerator2.default)(
/*#__PURE__*/
_regenerator.default.mark(function _callee() {
  var embedID, instance;
  return _regenerator.default.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return _reactTestRenderer.default.create(_react.default.createElement(_EmbedID.default, {
            url: "http://localhost:3111",
            handleResponse: function handleResponse() {}
          }));

        case 2:
          embedID = _context.sent;
          expect(_axios.default.get).toBeCalled();
          instance = embedID.root;
          instance.find(function (e) {
            var props = e.props;

            if (props === undefined) {
              return false;
            }

            return props.id === 'root_countries'; // TODO FIX && e.type === 'select'
          });

        case 6:
        case "end":
          return _context.stop();
      }
    }
  }, _callee, this);
})));